{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodoId","className","map","todo","id","completed","title","type","onClick","TodoFilter","onInput","onSelect","selectValue","inputValue","value","onChange","event","target","placeholder","currentTarget","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","isCardOpen","setIsCardOpen","user","setUser","foundTodo","find","useEffect","userId","response","href","email","name","App","setTodos","loader","setLoader","select","setSelector","input","setInput","todoId","setTodoId","visibleTodos","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c4b8158.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (value: number) => number | void;\n  selectedTodoId: number;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          data-cy=\"todo\"\n          className={selectedTodoId === todo.id\n            ? 'has-background-info-light'\n            : ''}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={\n              todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'\n            }\n            >\n              {todo.title}\n\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                return selectedTodoId === todo.id\n                  ? selectTodo(0)\n                  : selectTodo(todo.id);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={selectedTodoId === todo.id\n                  ? 'far fa-eye-slash'\n                  : 'far fa-eye'}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { ChangeEvent } from 'react';\n\ntype Props = {\n  selectValue: string;\n  onSelect: (arg: string) => (string) | void;\n  inputValue: string;\n  onInput: (arg: string) => (string) | void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onInput,\n  onSelect,\n  selectValue,\n  inputValue,\n}) => {\n  const handleChangeValue = (event: ChangeEvent<HTMLSelectElement>) => {\n    onSelect(event.target.value);\n  };\n\n  const handleChangeText = (event: ChangeEvent<HTMLInputElement>) => {\n    onInput(event.currentTarget.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={handleChangeValue}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={handleChangeText}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {inputValue !== '' && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onInput('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (value: number) => number | void;\n  selectedTodoId: number;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodoId,\n}) => {\n  const [isCardOpen, setIsCardOpen] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  const foundTodo = todos.find(todo => todo.id === selectedTodoId);\n\n  useEffect(() => {\n    if (foundTodo) {\n      getUser(foundTodo.userId)\n        .then(response => setUser(response));\n    }\n  }, []);\n\n  if (!isCardOpen) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setIsCardOpen(false);\n                selectTodo(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {foundTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={foundTodo?.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {foundTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loader, setLoader] = useState(true);\n  const [select, setSelector] = useState('All');\n  const [input, setInput] = useState('');\n  const [todoId, setTodoId] = useState(0);\n\n  useEffect(() => {\n    getTodos()\n      .then(response => {\n        setTodos(response);\n        setLoader(false);\n      });\n  }, []);\n\n  const visibleTodos = todos\n    .filter(todo => {\n      switch (select) {\n        case 'active':\n          return !todo.completed;\n\n        case 'completed':\n          return todo.completed;\n\n        default:\n          return true;\n      }\n    })\n    .filter(todo => {\n      return todo.title.toLowerCase().includes(input.toLowerCase());\n    });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSelect={setSelector}\n                selectValue={select}\n                onInput={setInput}\n                inputValue={input}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loader\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectTodo={todo => setTodoId(todo)}\n                    selectedTodoId={todoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoId !== 0\n        && (\n          <TodoModal\n            selectedTodoId={todoId}\n            todos={visibleTodos}\n            selectTodo={todo => setTodoId(todo)}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}